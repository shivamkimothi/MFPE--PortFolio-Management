INFO  06:30:00 Application started. Press Ctrl+C to shut down.
INFO  06:30:00 Hosting environment: Development
INFO  06:30:00 Content root path: D:\Final\CustomerPortal
INFO  06:30:23  User with Id = 12345 is a valid user
INFO  06:30:23 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  06:30:23 Calling the Calculate Networth Api
ERROR 06:30:24 An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at CustomerPortal.Controllers.PortFolioController.Index() in D:\Final\CustomerPortal\Controllers\PortFolioController.cs:line 83
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
INFO  06:31:38 Application started. Press Ctrl+C to shut down.
INFO  06:31:38 Hosting environment: Development
INFO  06:31:38 Content root path: D:\Final\CustomerPortal
INFO  06:31:48  User with Id = 12345 is a valid user
INFO  06:31:48 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  06:31:48 Calling the Calculate Networth Api
ERROR 06:32:05 An unhandled exception has occurred while executing the request.
Newtonsoft.Json.JsonReaderException: Unexpected character encountered while parsing value: P. Path '', line 0, position 0.
   at Newtonsoft.Json.JsonTextReader.ParseValue()
   at Newtonsoft.Json.JsonReader.ReadAndMoveToContent()
   at Newtonsoft.Json.JsonReader.ReadForType(JsonContract contract, Boolean hasConverter)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)
   at CustomerPortal.Controllers.PortFolioController.SellStock(StockDetails sd) in D:\Final\CustomerPortal\Controllers\PortFolioController.cs:line 159
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
INFO  06:35:33 Application started. Press Ctrl+C to shut down.
INFO  06:35:33 Hosting environment: Development
INFO  06:35:33 Content root path: D:\Final\CustomerPortal
INFO  06:36:22  User with Id = 12345 is a valid user
INFO  06:36:22 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  06:36:22 Calling the Calculate Networth Api
INFO  06:36:37  User with Id = 12345 is a valid user
INFO  06:36:37 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  06:36:37 Calling the Calculate Networth Api
INFO  06:36:47  User with Id = 12345 is a valid user
INFO  06:36:47 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  06:36:47 Calling the Calculate Networth Api
INFO  06:36:56  User with Id = 12345 is a valid user
INFO  06:36:56 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  06:36:56 Calling the Calculate Networth Api
INFO  06:37:05  User with Id = 12345 is a valid user
INFO  06:37:05 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  06:37:05 Calling the Calculate Networth Api
INFO  06:37:17  User with Id = 12345 is a valid user
INFO  06:37:17 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  06:37:17 Calling the Calculate Networth Api
INFO  06:42:22 Application started. Press Ctrl+C to shut down.
INFO  06:42:22 Hosting environment: Development
INFO  06:42:22 Content root path: D:\Final\CustomerPortal
INFO  06:42:36 Application started. Press Ctrl+C to shut down.
INFO  06:42:36 Hosting environment: Development
INFO  06:42:36 Content root path: D:\Final\CustomerPortal
INFO  06:42:47  User with Id = 12345 is a valid user
INFO  06:42:47 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  06:42:47 Calling the Calculate Networth Api
INFO  06:43:05  User with Id = 12345 is a valid user
INFO  06:43:05 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  06:43:05 Calling the Calculate Networth Api
INFO  06:43:13  User with Id = 12345 is a valid user
INFO  06:43:13 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  06:43:13 Calling the Calculate Networth Api
INFO  06:43:32  User with Id = 12345 is a valid user
INFO  06:43:32 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  06:43:32 Calling the Calculate Networth Api
INFO  06:43:42  User with Id = 12345 is a valid user
INFO  06:43:42 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  06:43:42 Calling the Calculate Networth Api
INFO  06:44:50  User with Id = 12345 is logging out
INFO  06:45:06  User with Id = 12345 is a valid user
INFO  06:45:06 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  06:45:06 Calling the Calculate Networth Api
INFO  06:45:14  User with Id = 12345 is logging out
INFO  06:45:31  User with Id = 12345 is a valid user
INFO  06:45:31 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  06:45:31 Calling the Calculate Networth Api
INFO  06:45:41  User with Id = 12345 is a valid user
INFO  06:45:41 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  06:45:41 Calling the Calculate Networth Api
INFO  06:59:14 Application started. Press Ctrl+C to shut down.
INFO  06:59:14 Hosting environment: Development
INFO  06:59:14 Content root path: D:\Final\CustomerPortal
ERROR 06:59:18 An unhandled exception has occurred while executing the request.
System.InvalidOperationException: An invalid request URI was provided. The request URI must either be an absolute URI or BaseAddress must be set.
   at System.Net.Http.HttpClient.PrepareRequestMessage(HttpRequestMessage request)
   at System.Net.Http.HttpClient.SendAsync(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.PostAsync(Uri requestUri, HttpContent content, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.PostAsync(String requestUri, HttpContent content)
   at CustomerPortal.Controllers.HomeController.GetToken(String url, Users user) in D:\Final\CustomerPortal\Controllers\HomeController.cs:line 73
   at CustomerPortal.Controllers.HomeController.Login(Users user) in D:\Final\CustomerPortal\Controllers\HomeController.cs:line 45
   at lambda_method(Closure , Object , Object[] )
   at Microsoft.Extensions.Internal.ObjectMethodExecutor.Execute(Object target, Object[] parameters)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
ERROR 07:00:17 An unhandled exception has occurred while executing the request.
System.InvalidOperationException: An invalid request URI was provided. The request URI must either be an absolute URI or BaseAddress must be set.
   at System.Net.Http.HttpClient.PrepareRequestMessage(HttpRequestMessage request)
   at System.Net.Http.HttpClient.SendAsync(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.PostAsync(Uri requestUri, HttpContent content, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.PostAsync(String requestUri, HttpContent content)
   at CustomerPortal.Controllers.HomeController.GetToken(String url, Users user) in D:\Final\CustomerPortal\Controllers\HomeController.cs:line 73
   at CustomerPortal.Controllers.HomeController.Login(Users user) in D:\Final\CustomerPortal\Controllers\HomeController.cs:line 45
   at lambda_method(Closure , Object , Object[] )
   at Microsoft.Extensions.Internal.ObjectMethodExecutor.Execute(Object target, Object[] parameters)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
INFO  07:00:34 Application started. Press Ctrl+C to shut down.
INFO  07:00:34 Hosting environment: Development
INFO  07:00:34 Content root path: D:\Final\CustomerPortal
INFO  07:04:21 Application started. Press Ctrl+C to shut down.
INFO  07:04:21 Hosting environment: Development
INFO  07:04:21 Content root path: D:\Final\CustomerPortal
INFO  07:18:02 Application started. Press Ctrl+C to shut down.
INFO  07:18:02 Hosting environment: Development
INFO  07:18:02 Content root path: D:\Final\CustomerPortal
INFO  07:18:18 Application started. Press Ctrl+C to shut down.
INFO  07:18:18 Hosting environment: Development
INFO  07:18:18 Content root path: D:\Final\CustomerPortal
INFO  07:19:35  User with Id = 12345 is a valid user
INFO  07:19:35 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  07:19:35 Calling the Calculate Networth Api
INFO  07:21:20  User with Id = 12345 is logging out
INFO  07:21:36  User with Id = 12345 is a valid user
INFO  07:21:36 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  07:21:36 Calling the Calculate Networth Api
INFO  07:21:56  User with Id = 12345 is a valid user
INFO  07:21:56 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  07:21:56 Calling the Calculate Networth Api
INFO  07:22:32  User with Id = 12345 is logging out
INFO  07:45:25 Application started. Press Ctrl+C to shut down.
INFO  07:45:25 Hosting environment: Development
INFO  07:45:25 Content root path: D:\Final\CustomerPortal
INFO  07:45:41  User with Id = 1729 is a valid user
INFO  07:45:41 Showing the user with portfolio ID = 1729his networth and the assets he is currently holding
INFO  07:45:41 Calling the Calculate Networth Api
INFO  07:47:42  User with Id = 1729 is a valid user
INFO  07:47:42 Showing the user with portfolio ID = 1729his networth and the assets he is currently holding
INFO  07:47:42 Calling the Calculate Networth Api
INFO  07:47:54  User with Id = 1729 is a valid user
INFO  07:47:54 Showing the user with portfolio ID = 1729his networth and the assets he is currently holding
INFO  07:47:54 Calling the Calculate Networth Api
INFO  07:48:04  User with Id = 1729 is a valid user
INFO  07:48:04 Showing the user with portfolio ID = 1729his networth and the assets he is currently holding
INFO  07:48:04 Calling the Calculate Networth Api
INFO  07:48:42  User with Id = 1729 is a valid user
INFO  07:48:42 Showing the user with portfolio ID = 1729his networth and the assets he is currently holding
INFO  07:48:42 Calling the Calculate Networth Api
INFO  07:49:18 Application started. Press Ctrl+C to shut down.
INFO  07:49:18 Hosting environment: Development
INFO  07:49:18 Content root path: D:\Final\CustomerPortal
INFO  07:49:28  User with Id = 789 is a valid user
INFO  07:49:28 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  07:49:28 Calling the Calculate Networth Api
INFO  07:49:47  User with Id = 789 is logging out
INFO  08:54:57  User with Id = 789 is a valid user
INFO  08:54:57 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  08:54:57 Calling the Calculate Networth Api
INFO  08:55:08  User with Id = 789 is a valid user
INFO  08:55:08 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  08:55:08 Calling the Calculate Networth Api
INFO  08:57:16  User with Id = 789 is a valid user
INFO  08:57:16 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  08:57:16 Calling the Calculate Networth Api
INFO  08:57:20  User with Id = 789 is a valid user
INFO  08:57:20 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  08:57:20 Calling the Calculate Networth Api
INFO  08:57:27  User with Id = 789 is logging out
INFO  08:57:35  User with Id = 1729 is a valid user
INFO  08:57:35 Showing the user with portfolio ID = 1729his networth and the assets he is currently holding
INFO  08:57:35 Calling the Calculate Networth Api
INFO  08:57:43  User with Id = 1729 is a valid user
INFO  08:57:43 Showing the user with portfolio ID = 1729his networth and the assets he is currently holding
INFO  08:57:43 Calling the Calculate Networth Api
INFO  08:57:45  User with Id = 1729 is logging out
INFO  09:19:09 Application started. Press Ctrl+C to shut down.
INFO  09:19:09 Hosting environment: Development
INFO  09:19:09 Content root path: D:\Final\CustomerPortal
INFO  09:19:30  User with Id = 1729 is a valid user
INFO  09:19:30 Showing the user with portfolio ID = 1729his networth and the assets he is currently holding
INFO  09:19:30 Calling the Calculate Networth Api
INFO  09:19:36  User with Id = 1729 is logging out
INFO  09:19:45  User with Id = 12345 is a valid user
INFO  09:19:45 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  09:19:45 Calling the Calculate Networth Api
INFO  09:19:53 sale of user with id12345done
INFO  09:19:58  User with Id = 12345 is a valid user
INFO  09:19:58 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  09:19:58 Calling the Calculate Networth Api
INFO  09:20:03  User with Id = 12345 is logging out
INFO  09:20:41  User with Id = 12345 is a valid user
INFO  09:20:41 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  09:20:41 Calling the Calculate Networth Api
INFO  09:20:47 sale of user with id12345done
INFO  09:20:50  User with Id = 12345 is logging out
INFO  09:21:04  User with Id = 1729 is a valid user
INFO  09:21:04 Showing the user with portfolio ID = 1729his networth and the assets he is currently holding
INFO  09:21:04 Calling the Calculate Networth Api
INFO  09:21:17 sale of user with id1729done
INFO  09:21:19  User with Id = 1729 is a valid user
INFO  09:21:19 Showing the user with portfolio ID = 1729his networth and the assets he is currently holding
INFO  09:21:19 Calling the Calculate Networth Api
INFO  09:21:28 sale of user with id1729done
INFO  09:21:32  User with Id = 1729 is logging out
INFO  09:24:51 Application started. Press Ctrl+C to shut down.
INFO  09:24:51 Hosting environment: Development
INFO  09:24:51 Content root path: D:\Final\CustomerPortal
INFO  09:25:06  User with Id = 12345 is a valid user
INFO  09:25:06 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  09:25:06 Calling the Calculate Networth Api
INFO  09:25:12  User with Id = 12345 is logging out
INFO  09:25:23  User with Id = 789 is a valid user
INFO  09:25:23 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  09:25:23 Calling the Calculate Networth Api
INFO  09:25:31 sale of user with id789done
INFO  09:25:34  User with Id = 789 is a valid user
INFO  09:25:34 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  09:25:34 Calling the Calculate Networth Api
INFO  09:25:41 sale of user with id789done
INFO  09:25:43  User with Id = 789 is a valid user
INFO  09:25:43 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  09:25:43 Calling the Calculate Networth Api
INFO  09:26:11  User with Id = 789 is a valid user
INFO  09:26:11 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  09:26:11 Calling the Calculate Networth Api
INFO  09:26:16 sale of user with id789done
INFO  09:26:18  User with Id = 789 is a valid user
INFO  09:26:18 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  09:26:18 Calling the Calculate Networth Api
INFO  09:29:47  User with Id =  is logging out
INFO  09:30:29  User with Id = 789 is a valid user
INFO  09:30:29 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  09:30:29 Calling the Calculate Networth Api
INFO  09:33:21  User with Id = 789 is logging out
INFO  09:33:52  User with Id = 12345 is a valid user
INFO  09:33:52 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  09:33:52 Calling the Calculate Networth Api
INFO  09:40:24  User with Id =  is logging out
INFO  09:41:45  User with Id = 12345 is a valid user
INFO  09:41:45 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  09:41:45 Calling the Calculate Networth Api
INFO  09:42:20  User with Id = 12345 is a valid user
INFO  09:42:20 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  09:42:20 Calling the Calculate Networth Api
INFO  09:42:43  User with Id = 12345 is a valid user
INFO  09:42:43 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  09:42:43 Calling the Calculate Networth Api
INFO  09:42:50 sale of user with id12345done
INFO  09:43:03  User with Id = 12345 is a valid user
INFO  09:43:03 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  09:43:03 Calling the Calculate Networth Api
INFO  09:44:25 sale of user with id12345done
INFO  09:44:28  User with Id = 12345 is a valid user
INFO  09:44:28 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  09:44:28 Calling the Calculate Networth Api
INFO  09:44:42 sale of user with id12345done
INFO  09:44:44  User with Id = 12345 is a valid user
INFO  09:44:44 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  09:44:44 Calling the Calculate Networth Api
INFO  09:46:44  User with Id = 12345 is logging out
INFO  02:35:40 Application started. Press Ctrl+C to shut down.
INFO  02:35:40 Hosting environment: Development
INFO  02:35:40 Content root path: D:\Final\CustomerPortal
INFO  02:35:52  User with Id = 12345 is a valid user
INFO  02:35:52 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  02:35:52 Calling the Calculate Networth Api
ERROR 02:35:52 An unhandled exception has occurred while executing the request.
Newtonsoft.Json.JsonReaderException: Error parsing Infinity value. Path '', line 1, position 1.
   at Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(ReadType readType, Boolean matched)
   at Newtonsoft.Json.JsonTextReader.ParseValue()
   at Newtonsoft.Json.JsonReader.ReadAndMoveToContent()
   at Newtonsoft.Json.JsonReader.ReadForType(JsonContract contract, Boolean hasConverter)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)
   at CustomerPortal.Controllers.PortFolioController.Index() in D:\Final\CustomerPortal\Controllers\PortFolioController.cs:line 68
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
INFO  02:41:07  User with Id = 12345 is a valid user
INFO  02:41:07 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  02:41:07 Calling the Calculate Networth Api
INFO  02:41:18 sale of user with id12345done
INFO  02:41:21  User with Id = 12345 is a valid user
INFO  02:41:21 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  02:41:21 Calling the Calculate Networth Api
INFO  02:41:37 sale of user with id12345done
INFO  02:41:40  User with Id = 12345 is a valid user
INFO  02:41:40 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  02:41:40 Calling the Calculate Networth Api
INFO  02:41:43  User with Id = 12345 is logging out
INFO  02:41:52  User with Id = 789 is a valid user
INFO  02:41:52 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  02:41:52 Calling the Calculate Networth Api
INFO  02:42:00 sale of user with id789done
INFO  02:42:02  User with Id = 789 is a valid user
INFO  02:42:02 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  02:42:02 Calling the Calculate Networth Api
INFO  02:42:12 sale of user with id789done
INFO  02:42:15  User with Id = 789 is a valid user
INFO  02:42:15 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  02:42:15 Calling the Calculate Networth Api
INFO  02:50:02  User with Id = 1729 is a valid user
INFO  02:50:02 Showing the user with portfolio ID = 1729his networth and the assets he is currently holding
INFO  02:50:02 Calling the Calculate Networth Api
INFO  02:50:10 sale of user with id1729done
INFO  02:50:13  User with Id = 1729 is a valid user
INFO  02:50:13 Showing the user with portfolio ID = 1729his networth and the assets he is currently holding
INFO  02:50:13 Calling the Calculate Networth Api
INFO  02:58:43 Application started. Press Ctrl+C to shut down.
INFO  02:58:43 Hosting environment: Development
INFO  02:58:43 Content root path: D:\Final\CustomerPortal
INFO  02:59:04  User with Id = 12345 is a valid user
INFO  02:59:04 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  02:59:04 Calling the Calculate Networth Api
INFO  02:59:37 sale of user with id12345done
INFO  03:11:31 Application started. Press Ctrl+C to shut down.
INFO  03:11:31 Hosting environment: Development
INFO  03:11:31 Content root path: D:\Final\CustomerPortal
INFO  03:11:40  User with Id = 789 is a valid user
INFO  03:11:40 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  03:11:40 Calling the Calculate Networth Api
INFO  03:11:48 sale of user with id789done
INFO  03:11:51  User with Id = 789 is a valid user
INFO  03:11:51 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  03:11:51 Calling the Calculate Networth Api
INFO  03:11:58 sale of user with id789done
INFO  03:12:01  User with Id = 789 is a valid user
INFO  03:12:01 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  03:12:01 Calling the Calculate Networth Api
INFO  03:12:07 sale of user with id789done
INFO  03:12:10  User with Id = 789 is a valid user
INFO  03:12:10 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  03:12:10 Calling the Calculate Networth Api
INFO  03:12:23 sale of user with id789done
INFO  03:12:26  User with Id = 789 is a valid user
INFO  03:12:26 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  03:12:26 Calling the Calculate Networth Api
INFO  03:15:21  User with Id = 12345 is a valid user
INFO  03:15:21 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  03:15:21 Calling the Calculate Networth Api
INFO  03:15:29 sale of user with id12345done
INFO  03:15:30  User with Id = 12345 is a valid user
INFO  03:15:30 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  03:15:31 Calling the Calculate Networth Api
INFO  03:38:05  User with Id = 12345 is a valid user
INFO  03:38:05 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  03:38:05 Calling the Calculate Networth Api
INFO  03:38:15  User with Id = 12345 is a valid user
INFO  03:38:15 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  03:38:15 Calling the Calculate Networth Api
INFO  03:38:26 sale of user with id12345done
INFO  03:38:28  User with Id = 12345 is a valid user
INFO  03:38:28 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  03:38:28 Calling the Calculate Networth Api
INFO  10:14:01 Application started. Press Ctrl+C to shut down.
INFO  10:14:01 Hosting environment: Development
INFO  10:14:01 Content root path: D:\Portfolio mfpe\CustomerPortal
WARN  10:14:01 Error unprotecting the session cookie.
System.Security.Cryptography.CryptographicException: The payload was invalid.
   at Microsoft.AspNetCore.DataProtection.Cng.CbcAuthenticatedEncryptor.DecryptImpl(Byte* pbCiphertext, UInt32 cbCiphertext, Byte* pbAdditionalAuthenticatedData, UInt32 cbAdditionalAuthenticatedData)
   at Microsoft.AspNetCore.DataProtection.Cng.Internal.CngAuthenticatedEncryptorBase.Decrypt(ArraySegment`1 ciphertext, ArraySegment`1 additionalAuthenticatedData)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.UnprotectCore(Byte[] protectedData, Boolean allowOperationsOnRevokedKeys, UnprotectStatus& status)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.DangerousUnprotect(Byte[] protectedData, Boolean ignoreRevocationErrors, Boolean& requiresMigration, Boolean& wasRevoked)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Unprotect(Byte[] protectedData)
   at Microsoft.AspNetCore.Session.CookieProtection.Unprotect(IDataProtector protector, String protectedText, ILogger logger)
WARN  10:14:02 Error unprotecting the session cookie.
System.Security.Cryptography.CryptographicException: The payload was invalid.
   at Microsoft.AspNetCore.DataProtection.Cng.CbcAuthenticatedEncryptor.DecryptImpl(Byte* pbCiphertext, UInt32 cbCiphertext, Byte* pbAdditionalAuthenticatedData, UInt32 cbAdditionalAuthenticatedData)
   at Microsoft.AspNetCore.DataProtection.Cng.Internal.CngAuthenticatedEncryptorBase.Decrypt(ArraySegment`1 ciphertext, ArraySegment`1 additionalAuthenticatedData)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.UnprotectCore(Byte[] protectedData, Boolean allowOperationsOnRevokedKeys, UnprotectStatus& status)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.DangerousUnprotect(Byte[] protectedData, Boolean ignoreRevocationErrors, Boolean& requiresMigration, Boolean& wasRevoked)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Unprotect(Byte[] protectedData)
   at Microsoft.AspNetCore.Session.CookieProtection.Unprotect(IDataProtector protector, String protectedText, ILogger logger)
WARN  10:14:03 Error unprotecting the session cookie.
System.Security.Cryptography.CryptographicException: The payload was invalid.
   at Microsoft.AspNetCore.DataProtection.Cng.CbcAuthenticatedEncryptor.DecryptImpl(Byte* pbCiphertext, UInt32 cbCiphertext, Byte* pbAdditionalAuthenticatedData, UInt32 cbAdditionalAuthenticatedData)
   at Microsoft.AspNetCore.DataProtection.Cng.Internal.CngAuthenticatedEncryptorBase.Decrypt(ArraySegment`1 ciphertext, ArraySegment`1 additionalAuthenticatedData)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.UnprotectCore(Byte[] protectedData, Boolean allowOperationsOnRevokedKeys, UnprotectStatus& status)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.DangerousUnprotect(Byte[] protectedData, Boolean ignoreRevocationErrors, Boolean& requiresMigration, Boolean& wasRevoked)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Unprotect(Byte[] protectedData)
   at Microsoft.AspNetCore.Session.CookieProtection.Unprotect(IDataProtector protector, String protectedText, ILogger logger)
WARN  10:14:03 Error unprotecting the session cookie.
System.Security.Cryptography.CryptographicException: The payload was invalid.
   at Microsoft.AspNetCore.DataProtection.Cng.CbcAuthenticatedEncryptor.DecryptImpl(Byte* pbCiphertext, UInt32 cbCiphertext, Byte* pbAdditionalAuthenticatedData, UInt32 cbAdditionalAuthenticatedData)
   at Microsoft.AspNetCore.DataProtection.Cng.Internal.CngAuthenticatedEncryptorBase.Decrypt(ArraySegment`1 ciphertext, ArraySegment`1 additionalAuthenticatedData)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.UnprotectCore(Byte[] protectedData, Boolean allowOperationsOnRevokedKeys, UnprotectStatus& status)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.DangerousUnprotect(Byte[] protectedData, Boolean ignoreRevocationErrors, Boolean& requiresMigration, Boolean& wasRevoked)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Unprotect(Byte[] protectedData)
   at Microsoft.AspNetCore.Session.CookieProtection.Unprotect(IDataProtector protector, String protectedText, ILogger logger)
WARN  10:14:03 Error unprotecting the session cookie.
System.Security.Cryptography.CryptographicException: The payload was invalid.
   at Microsoft.AspNetCore.DataProtection.Cng.CbcAuthenticatedEncryptor.DecryptImpl(Byte* pbCiphertext, UInt32 cbCiphertext, Byte* pbAdditionalAuthenticatedData, UInt32 cbAdditionalAuthenticatedData)
   at Microsoft.AspNetCore.DataProtection.Cng.Internal.CngAuthenticatedEncryptorBase.Decrypt(ArraySegment`1 ciphertext, ArraySegment`1 additionalAuthenticatedData)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.UnprotectCore(Byte[] protectedData, Boolean allowOperationsOnRevokedKeys, UnprotectStatus& status)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.DangerousUnprotect(Byte[] protectedData, Boolean ignoreRevocationErrors, Boolean& requiresMigration, Boolean& wasRevoked)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Unprotect(Byte[] protectedData)
   at Microsoft.AspNetCore.Session.CookieProtection.Unprotect(IDataProtector protector, String protectedText, ILogger logger)
WARN  10:14:03 Error unprotecting the session cookie.
System.Security.Cryptography.CryptographicException: The payload was invalid.
   at Microsoft.AspNetCore.DataProtection.Cng.CbcAuthenticatedEncryptor.DecryptImpl(Byte* pbCiphertext, UInt32 cbCiphertext, Byte* pbAdditionalAuthenticatedData, UInt32 cbAdditionalAuthenticatedData)
   at Microsoft.AspNetCore.DataProtection.Cng.Internal.CngAuthenticatedEncryptorBase.Decrypt(ArraySegment`1 ciphertext, ArraySegment`1 additionalAuthenticatedData)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.UnprotectCore(Byte[] protectedData, Boolean allowOperationsOnRevokedKeys, UnprotectStatus& status)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.DangerousUnprotect(Byte[] protectedData, Boolean ignoreRevocationErrors, Boolean& requiresMigration, Boolean& wasRevoked)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Unprotect(Byte[] protectedData)
   at Microsoft.AspNetCore.Session.CookieProtection.Unprotect(IDataProtector protector, String protectedText, ILogger logger)
WARN  10:14:03 Error unprotecting the session cookie.
System.Security.Cryptography.CryptographicException: The payload was invalid.
   at Microsoft.AspNetCore.DataProtection.Cng.CbcAuthenticatedEncryptor.DecryptImpl(Byte* pbCiphertext, UInt32 cbCiphertext, Byte* pbAdditionalAuthenticatedData, UInt32 cbAdditionalAuthenticatedData)
   at Microsoft.AspNetCore.DataProtection.Cng.Internal.CngAuthenticatedEncryptorBase.Decrypt(ArraySegment`1 ciphertext, ArraySegment`1 additionalAuthenticatedData)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.UnprotectCore(Byte[] protectedData, Boolean allowOperationsOnRevokedKeys, UnprotectStatus& status)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.DangerousUnprotect(Byte[] protectedData, Boolean ignoreRevocationErrors, Boolean& requiresMigration, Boolean& wasRevoked)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Unprotect(Byte[] protectedData)
   at Microsoft.AspNetCore.Session.CookieProtection.Unprotect(IDataProtector protector, String protectedText, ILogger logger)
WARN  10:14:14 Error unprotecting the session cookie.
System.Security.Cryptography.CryptographicException: The payload was invalid.
   at Microsoft.AspNetCore.DataProtection.Cng.CbcAuthenticatedEncryptor.DecryptImpl(Byte* pbCiphertext, UInt32 cbCiphertext, Byte* pbAdditionalAuthenticatedData, UInt32 cbAdditionalAuthenticatedData)
   at Microsoft.AspNetCore.DataProtection.Cng.Internal.CngAuthenticatedEncryptorBase.Decrypt(ArraySegment`1 ciphertext, ArraySegment`1 additionalAuthenticatedData)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.UnprotectCore(Byte[] protectedData, Boolean allowOperationsOnRevokedKeys, UnprotectStatus& status)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.DangerousUnprotect(Byte[] protectedData, Boolean ignoreRevocationErrors, Boolean& requiresMigration, Boolean& wasRevoked)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Unprotect(Byte[] protectedData)
   at Microsoft.AspNetCore.Session.CookieProtection.Unprotect(IDataProtector protector, String protectedText, ILogger logger)
INFO  10:14:17  User with Id = 12345 is a valid user
INFO  10:14:17 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  10:14:17 Calling the Calculate Networth Api
INFO  10:14:28  User with Id = 12345 is logging out
INFO  10:14:40  User with Id = 12345 is a valid user
INFO  10:14:40 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  10:14:40 Calling the Calculate Networth Api
INFO  10:14:46 sale of user with id12345done
INFO  10:14:57  User with Id = 12345 is a valid user
INFO  10:14:57 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  10:14:57 Calling the Calculate Networth Api
INFO  10:15:10 sale of user with id12345done
INFO  10:15:15  User with Id = 12345 is a valid user
INFO  10:15:15 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  10:15:15 Calling the Calculate Networth Api
INFO  10:15:30 sale of user with id12345done
INFO  10:15:32  User with Id = 12345 is a valid user
INFO  10:15:32 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  10:15:32 Calling the Calculate Networth Api
INFO  10:19:01 Application started. Press Ctrl+C to shut down.
INFO  10:19:01 Hosting environment: Development
INFO  10:19:01 Content root path: D:\Portfolio mfpe\CustomerPortal
INFO  10:19:15  User with Id = 12345 is a valid user
INFO  10:19:15 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  10:19:15 Calling the Calculate Networth Api
INFO  10:19:22 sale of user with id12345done
INFO  10:19:25  User with Id = 12345 is a valid user
INFO  10:19:25 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  10:19:25 Calling the Calculate Networth Api
INFO  10:19:40 sale of user with id12345done
INFO  10:19:43  User with Id = 12345 is a valid user
INFO  10:19:43 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  10:19:43 Calling the Calculate Networth Api
INFO  10:19:54  User with Id = 12345 is a valid user
INFO  10:19:54 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  10:19:54 Calling the Calculate Networth Api
INFO  10:20:07  User with Id = 12345 is a valid user
INFO  10:20:07 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  10:20:07 Calling the Calculate Networth Api
INFO  10:20:08  User with Id = 12345 is a valid user
INFO  10:20:08 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  10:20:08 Calling the Calculate Networth Api
INFO  10:20:09  User with Id = 12345 is a valid user
INFO  10:20:09 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  10:20:09 Calling the Calculate Networth Api
INFO  10:25:21 Application started. Press Ctrl+C to shut down.
INFO  10:25:21 Hosting environment: Development
INFO  10:25:21 Content root path: D:\Portfolio mfpe\CustomerPortal
INFO  10:25:32  User with Id = 12345 is a valid user
INFO  10:25:32 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  10:25:32 Calling the Calculate Networth Api
INFO  10:26:24 Application started. Press Ctrl+C to shut down.
INFO  10:26:24 Hosting environment: Development
INFO  10:26:24 Content root path: D:\Portfolio mfpe\CustomerPortal
INFO  10:26:33  User with Id = 12345 is a valid user
INFO  10:26:33 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  10:26:34 Calling the Calculate Networth Api
INFO  10:30:02 Application started. Press Ctrl+C to shut down.
INFO  10:30:02 Hosting environment: Development
INFO  10:30:02 Content root path: D:\Portfolio mfpe\CustomerPortal
INFO  10:30:23  User with Id = 789 is a valid user
INFO  10:30:23 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  10:30:23 Calling the Calculate Networth Api
INFO  10:30:38 sale of user with id789done
INFO  10:30:41  User with Id = 789 is a valid user
INFO  10:30:41 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  10:30:41 Calling the Calculate Networth Api
INFO  10:30:44  User with Id = 789 is logging out
INFO  10:30:52  User with Id = 12345 is a valid user
INFO  10:30:52 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  10:30:52 Calling the Calculate Networth Api
INFO  10:32:13 Application started. Press Ctrl+C to shut down.
INFO  10:32:13 Hosting environment: Development
INFO  10:32:13 Content root path: D:\Portfolio mfpe\CustomerPortal
INFO  10:32:23  User with Id = 12345 is a valid user
INFO  10:32:23 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  10:32:23 Calling the Calculate Networth Api
INFO  10:33:16 Application started. Press Ctrl+C to shut down.
INFO  10:33:16 Hosting environment: Development
INFO  10:33:16 Content root path: D:\Portfolio mfpe\CustomerPortal
INFO  10:33:26  User with Id = 12345 is a valid user
INFO  10:33:26 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  10:33:26 Calling the Calculate Networth Api
INFO  10:35:51  User with Id = 789 is a valid user
INFO  10:35:51 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  10:35:51 Calling the Calculate Networth Api
INFO  10:37:59 Application started. Press Ctrl+C to shut down.
INFO  10:37:59 Hosting environment: Development
INFO  10:37:59 Content root path: D:\Portfolio mfpe\CustomerPortal
INFO  10:38:16  User with Id = 12345 is a valid user
INFO  10:38:16 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  10:38:16 Calling the Calculate Networth Api
INFO  10:38:23  User with Id = 12345 is a valid user
INFO  10:38:23 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  10:38:23 Calling the Calculate Networth Api
INFO  10:38:29 sale of user with id12345done
INFO  10:38:32  User with Id = 12345 is a valid user
INFO  10:38:32 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  10:38:32 Calling the Calculate Networth Api
INFO  10:38:39 sale of user with id12345done
INFO  10:38:42  User with Id = 12345 is a valid user
INFO  10:38:42 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  10:38:42 Calling the Calculate Networth Api
INFO  11:11:55 Application started. Press Ctrl+C to shut down.
INFO  11:11:55 Hosting environment: Development
INFO  11:11:55 Content root path: D:\Portfolio mfpe\CustomerPortal
INFO  11:12:11  User with Id = 12345 is a valid user
INFO  11:12:11 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  11:12:11 Calling the Calculate Networth Api
INFO  11:12:11 Calling the Networth api to return the networth of sent portfolio
INFO  11:12:23  User with Id = 789 is a valid user
INFO  11:12:23 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  11:12:23 Calling the Calculate Networth Api
INFO  11:12:24 Calling the Networth api to return the networth of sent portfolio
INFO  07:45:24 Application started. Press Ctrl+C to shut down.
INFO  07:45:24 Hosting environment: Development
INFO  07:45:24 Content root path: D:\Portfolio mfpe\CustomerPortal
INFO  07:45:50  User with Id = 12345 is a valid user
INFO  07:45:50 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  07:45:51 Calling the Calculate Networth Api
INFO  07:45:52 Calling the Networth api to return the networth of sent portfolio
INFO  07:45:52 Calling the StockPriceApi from:Index of portfolio management controller
INFO  07:45:52 Calling the StockPriceApi from:Index of portfolio management controller
INFO  07:45:52 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  07:45:52 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  07:46:07 Selling the stocks of user with id = 12345
INFO  07:46:08 sale of stock of user with id12345done
INFO  07:46:13  User with Id = 12345 is a valid user
INFO  07:46:13 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  07:46:13 Calling the Calculate Networth Api
INFO  07:46:13 Calling the Networth api to return the networth of sent portfolio
INFO  07:46:13 Calling the StockPriceApi from:Index of portfolio management controller
INFO  07:46:13 Calling the StockPriceApi from:Index of portfolio management controller
INFO  07:46:13 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  07:46:13 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  07:46:24 sale of  mutual fund of user with id12345done
INFO  07:46:26  User with Id = 12345 is a valid user
INFO  07:46:26 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  07:46:26 Calling the Calculate Networth Api
INFO  07:46:26 Calling the Networth api to return the networth of sent portfolio
INFO  07:46:26 Calling the StockPriceApi from:Index of portfolio management controller
INFO  07:46:26 Calling the StockPriceApi from:Index of portfolio management controller
INFO  07:46:26 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  07:46:26 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  07:46:37 sale of  mutual fund of user with id12345done
INFO  07:46:40  User with Id = 12345 is a valid user
INFO  07:46:40 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  07:46:40 Calling the Calculate Networth Api
INFO  07:46:40 Calling the Networth api to return the networth of sent portfolio
INFO  07:46:40 Calling the StockPriceApi from:Index of portfolio management controller
INFO  07:46:40 Calling the StockPriceApi from:Index of portfolio management controller
INFO  07:46:40 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  07:46:40 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:07:34 Application started. Press Ctrl+C to shut down.
INFO  11:07:34 Hosting environment: Development
INFO  11:07:34 Content root path: D:\Portfolio mfpe\CustomerPortal
INFO  11:07:46  User with Id = 12345 is a valid user
INFO  11:07:46 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  11:07:46 Calling the Calculate Networth Api
INFO  11:07:46 Calling the Networth api to return the networth of sent portfolio
INFO  11:07:46 Calling the StockPriceApi from:Index of portfolio management controller
INFO  11:07:46 Calling the StockPriceApi from:Index of portfolio management controller
INFO  11:07:46 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:07:46 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:07:53 Selling the stocks of user with id = 12345
INFO  11:07:54 sale of stock of user with id12345done
INFO  11:07:58  User with Id = 12345 is a valid user
INFO  11:07:58 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  11:07:58 Calling the Calculate Networth Api
INFO  11:07:58 Calling the Networth api to return the networth of sent portfolio
INFO  11:07:58 Calling the StockPriceApi from:Index of portfolio management controller
INFO  11:07:58 Calling the StockPriceApi from:Index of portfolio management controller
INFO  11:07:58 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:07:58 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:08:05 Selling the stocks of user with id = 12345
INFO  11:08:05 sale of stock of user with id12345done
INFO  11:08:07  User with Id = 12345 is a valid user
INFO  11:08:07 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  11:08:07 Calling the Calculate Networth Api
INFO  11:08:07 Calling the Networth api to return the networth of sent portfolio
INFO  11:08:07 Calling the StockPriceApi from:Index of portfolio management controller
INFO  11:08:07 Calling the StockPriceApi from:Index of portfolio management controller
INFO  11:08:07 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:08:07 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:08:13 Selling the stocks of user with id = 12345
INFO  11:08:13 sale of stock of user with id12345done
INFO  11:08:15  User with Id = 12345 is a valid user
INFO  11:08:15 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  11:08:15 Calling the Calculate Networth Api
INFO  11:08:15 Calling the Networth api to return the networth of sent portfolio
INFO  11:08:15 Calling the StockPriceApi from:Index of portfolio management controller
INFO  11:08:15 Calling the StockPriceApi from:Index of portfolio management controller
INFO  11:08:15 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:08:15 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:08:30 sale of  mutual fund of user with id12345done
INFO  11:08:35  User with Id = 12345 is a valid user
INFO  11:08:35 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  11:08:35 Calling the Calculate Networth Api
INFO  11:08:35 Calling the Networth api to return the networth of sent portfolio
INFO  11:08:35 Calling the StockPriceApi from:Index of portfolio management controller
INFO  11:08:35 Calling the StockPriceApi from:Index of portfolio management controller
INFO  11:08:35 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:33:57 Application started. Press Ctrl+C to shut down.
INFO  11:33:57 Hosting environment: Development
INFO  11:33:57 Content root path: D:\Portfolio mfpe\CustomerPortal
INFO  11:34:07  User with Id = 12345 is a valid user
INFO  11:34:07 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  11:34:07 Calling the Calculate Networth Api
INFO  11:34:07 Calling the Networth api to return the networth of sent portfolio
INFO  11:34:07 Calling the StockPriceApi from:Index of portfolio management controller
INFO  11:34:07 Calling the StockPriceApi from:Index of portfolio management controller
INFO  11:34:07 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:34:07 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:34:15 Selling the stocks of user with id = 12345
INFO  11:34:15 sale of stock of user with id12345done
INFO  11:34:19  User with Id = 12345 is a valid user
INFO  11:34:19 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  11:34:19 Calling the Calculate Networth Api
INFO  11:34:19 Calling the Networth api to return the networth of sent portfolio
INFO  11:34:19 Calling the StockPriceApi from:Index of portfolio management controller
INFO  11:34:19 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:34:19 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:34:28 Selling the stocks of user with id = 12345
INFO  11:34:28 sale of stock of user with id12345done
INFO  11:34:30  User with Id = 12345 is a valid user
INFO  11:34:30 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  11:34:30 Calling the Calculate Networth Api
INFO  11:34:30 Calling the Networth api to return the networth of sent portfolio
ERROR 11:34:30 An exception occured while showing the portfolio details to the user. the message is :Unexpected character encountered while parsing value: T. Path '', line 0, position 0.
INFO  11:37:28  User with Id = 12345 is a valid user
INFO  11:37:28 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  11:37:28 Calling the Calculate Networth Api
INFO  11:37:28 Calling the Networth api to return the networth of sent portfolio
INFO  11:37:28 Calling the StockPriceApi from:Index of portfolio management controller
INFO  11:37:28 Calling the StockPriceApi from:Index of portfolio management controller
INFO  11:37:28 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:37:28 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:37:42 Selling the stocks of user with id = 12345
INFO  11:37:42 sale of stock of user with id12345done
INFO  11:37:44  User with Id = 12345 is a valid user
INFO  11:37:44 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  11:37:44 Calling the Calculate Networth Api
INFO  11:37:44 Calling the Networth api to return the networth of sent portfolio
INFO  11:37:44 Calling the StockPriceApi from:Index of portfolio management controller
INFO  11:37:44 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:37:44 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:37:50 Selling the stocks of user with id = 12345
INFO  11:37:50 sale of stock of user with id12345done
INFO  11:37:53  User with Id = 12345 is a valid user
INFO  11:37:53 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  11:37:53 Calling the Calculate Networth Api
INFO  11:37:53 Calling the Networth api to return the networth of sent portfolio
ERROR 11:37:53 An exception occured while showing the portfolio details to the user. the message is :Unexpected character encountered while parsing value: T. Path '', line 0, position 0.
INFO  11:38:01  User with Id = 12345 is a valid user
INFO  11:38:01 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  11:38:01 Calling the Calculate Networth Api
INFO  11:38:01 Calling the Networth api to return the networth of sent portfolio
ERROR 11:38:01 An exception occured while showing the portfolio details to the user. the message is :Unexpected character encountered while parsing value: T. Path '', line 0, position 0.
INFO  11:42:42 Application started. Press Ctrl+C to shut down.
INFO  11:42:42 Hosting environment: Development
INFO  11:42:42 Content root path: D:\Portfolio mfpe\CustomerPortal
INFO  11:42:57  User with Id = 12345 is a valid user
INFO  11:42:57 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  11:42:57 Calling the Calculate Networth Api
INFO  11:42:58 Calling the Networth api to return the networth of sent portfolio
ERROR 11:42:58 An exception occured while showing the portfolio details to the user. the message is :Unexpected character encountered while parsing value: T. Path '', line 0, position 0.
INFO  11:43:31  User with Id = 12345 is a valid user
INFO  11:43:31 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  11:43:31 Calling the Calculate Networth Api
INFO  11:43:31 Calling the Networth api to return the networth of sent portfolio
INFO  11:43:31 Calling the StockPriceApi from:Index of portfolio management controller
INFO  11:43:31 Calling the StockPriceApi from:Index of portfolio management controller
INFO  11:43:31 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:43:31 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:43:41 Selling the stocks of user with id = 12345
INFO  11:43:41 sale of stock of user with id12345done
INFO  11:43:44  User with Id = 12345 is a valid user
INFO  11:43:44 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  11:43:44 Calling the Calculate Networth Api
INFO  11:43:44 Calling the Networth api to return the networth of sent portfolio
INFO  11:43:44 Calling the StockPriceApi from:Index of portfolio management controller
INFO  11:43:44 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:43:44 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:43:56 Selling the stocks of user with id = 12345
INFO  11:43:56 sale of stock of user with id12345done
INFO  11:43:57  User with Id = 12345 is a valid user
INFO  11:43:57 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  11:43:57 Calling the Calculate Networth Api
INFO  11:43:57 Calling the Networth api to return the networth of sent portfolio
INFO  11:43:57 Calling the StockPriceApi from:Index of portfolio management controller
INFO  11:43:57 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:43:57 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:44:05 Selling the stocks of user with id = 12345
INFO  11:44:05 sale of stock of user with id12345done
INFO  11:44:10  User with Id = 12345 is a valid user
INFO  11:44:10 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  11:44:10 Calling the Calculate Networth Api
INFO  11:44:10 Calling the Networth api to return the networth of sent portfolio
ERROR 11:44:11 An exception occured while showing the portfolio details to the user. the message is :Unexpected character encountered while parsing value: T. Path '', line 0, position 0.
INFO  11:45:31 Application started. Press Ctrl+C to shut down.
INFO  11:45:31 Hosting environment: Development
INFO  11:45:31 Content root path: D:\Portfolio mfpe\CustomerPortal
INFO  11:45:50  User with Id = 12345 is a valid user
INFO  11:45:50 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  11:45:50 Calling the Calculate Networth Api
INFO  11:45:50 Calling the Networth api to return the networth of sent portfolio
ERROR 11:45:51 An unhandled exception has occurred while executing the request.
Newtonsoft.Json.JsonReaderException: Unexpected character encountered while parsing value: T. Path '', line 0, position 0.
   at Newtonsoft.Json.JsonTextReader.ParseValue()
   at Newtonsoft.Json.JsonReader.ReadAndMoveToContent()
   at Newtonsoft.Json.JsonReader.ReadForType(JsonContract contract, Boolean hasConverter)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)
   at CustomerPortal.Controllers.PortFolioController.Index() in D:\Portfolio mfpe\CustomerPortal\Controllers\PortFolioController.cs:line 113
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
INFO  11:56:16 Application started. Press Ctrl+C to shut down.
INFO  11:56:16 Hosting environment: Development
INFO  11:56:16 Content root path: D:\Portfolio mfpe\CustomerPortal
INFO  11:56:26  User with Id = 12345 is a valid user
INFO  11:56:26 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  11:56:26 Calling the Calculate Networth Api
INFO  11:56:26 Calling the Networth api to return the networth of sent portfolio
INFO  11:56:26 Calling the StockPriceApi from:Index of portfolio management controller
INFO  11:56:26 Calling the StockPriceApi from:Index of portfolio management controller
INFO  11:56:26 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:56:26 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:56:34 Selling the stocks of user with id = 12345
INFO  11:56:34 sale of stock of user with id12345done
INFO  11:56:37  User with Id = 12345 is a valid user
INFO  11:56:37 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  11:56:37 Calling the Calculate Networth Api
INFO  11:56:37 Calling the Networth api to return the networth of sent portfolio
INFO  11:56:37 Calling the StockPriceApi from:Index of portfolio management controller
INFO  11:56:37 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:56:37 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:56:43 Selling the stocks of user with id = 12345
INFO  11:56:43 sale of stock of user with id12345done
INFO  11:56:46  User with Id = 12345 is a valid user
INFO  11:56:46 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  11:56:46 Calling the Calculate Networth Api
INFO  11:56:46 Calling the Networth api to return the networth of sent portfolio
INFO  11:56:46 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:56:46 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:56:54  User with Id = 12345 is a valid user
INFO  11:56:54 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  11:56:54 Calling the Calculate Networth Api
INFO  11:56:54 Calling the Networth api to return the networth of sent portfolio
INFO  11:56:54 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:56:54 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:57:01 sale of  mutual fund of user with id12345done
INFO  11:57:03  User with Id = 12345 is a valid user
INFO  11:57:03 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  11:57:03 Calling the Calculate Networth Api
INFO  11:57:03 Calling the Networth api to return the networth of sent portfolio
INFO  11:57:03 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:57:08  User with Id = 12345 is a valid user
INFO  11:57:08 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  11:57:08 Calling the Calculate Networth Api
INFO  11:57:08 Calling the Networth api to return the networth of sent portfolio
INFO  11:57:08 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  11:57:14 sale of  mutual fund of user with id12345done
INFO  11:57:16  User with Id = 12345 is a valid user
INFO  11:57:16 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  11:57:16 Calling the Calculate Networth Api
INFO  11:57:16 Calling the Networth api to return the networth of sent portfolio
ERROR 11:57:16 An unhandled exception has occurred while executing the request.
Newtonsoft.Json.JsonReaderException: Unexpected character encountered while parsing value: T. Path '', line 0, position 0.
   at Newtonsoft.Json.JsonTextReader.ParseValue()
   at Newtonsoft.Json.JsonReader.ReadForType(JsonContract contract, Boolean hasConverter)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)
   at CustomerPortal.Controllers.PortFolioController.Index() in D:\Portfolio mfpe\CustomerPortal\Controllers\PortFolioController.cs:line 113
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
INFO  11:58:32 Application started. Press Ctrl+C to shut down.
INFO  11:58:32 Hosting environment: Development
INFO  11:58:32 Content root path: D:\Portfolio mfpe\CustomerPortal
INFO  12:04:21 Application started. Press Ctrl+C to shut down.
INFO  12:04:21 Hosting environment: Development
INFO  12:04:21 Content root path: D:\Portfolio mfpe\CustomerPortal
INFO  12:04:30  User with Id = 12345 is a valid user
INFO  12:04:30 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  12:04:30 Calling the Calculate Networth Api
INFO  12:04:30 Calling the Networth api to return the networth of sent portfolio
INFO  12:04:30 Calling the StockPriceApi from:Index of portfolio management controller
INFO  12:04:30 Calling the StockPriceApi from:Index of portfolio management controller
INFO  12:04:30 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  12:04:30 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  12:04:37 Selling the stocks of user with id = 12345
INFO  12:04:38 sale of stock of user with id12345done
INFO  12:04:41  User with Id = 12345 is a valid user
INFO  12:04:41 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  12:04:41 Calling the Calculate Networth Api
INFO  12:04:41 Calling the Networth api to return the networth of sent portfolio
INFO  12:04:41 Calling the StockPriceApi from:Index of portfolio management controller
INFO  12:04:41 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  12:04:41 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  12:04:48 Selling the stocks of user with id = 12345
INFO  12:04:48 sale of stock of user with id12345done
INFO  12:04:51  User with Id = 12345 is a valid user
INFO  12:04:51 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  12:04:51 Calling the Calculate Networth Api
INFO  12:04:51 Calling the Networth api to return the networth of sent portfolio
INFO  12:04:51 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  12:04:51 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  12:04:57 sale of  mutual fund of user with id12345done
INFO  12:04:58  User with Id = 12345 is a valid user
INFO  12:04:58 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  12:04:58 Calling the Calculate Networth Api
INFO  12:04:58 Calling the Networth api to return the networth of sent portfolio
INFO  12:04:58 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  12:05:03 sale of  mutual fund of user with id12345done
INFO  12:05:05  User with Id = 12345 is a valid user
INFO  12:05:05 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  12:05:05 Calling the Calculate Networth Api
INFO  12:05:05 Calling the Networth api to return the networth of sent portfolio
INFO  12:12:26 Application started. Press Ctrl+C to shut down.
INFO  12:12:26 Hosting environment: Development
INFO  12:12:26 Content root path: D:\Portfolio mfpe\CustomerPortal
INFO  12:12:38  User with Id = 789 is a valid user
INFO  12:12:38 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  12:12:38 Calling the Calculate Networth Api
INFO  12:12:38 Calling the Networth api to return the networth of sent portfolio
INFO  12:12:38 Calling the StockPriceApi from:Index of portfolio management controller
INFO  12:12:38 Calling the StockPriceApi from:Index of portfolio management controller
INFO  12:12:38 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  12:12:38 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  12:12:46 Selling the stocks of user with id = 789
INFO  12:12:46 sale of stock of user with id789done
INFO  12:12:49  User with Id = 789 is a valid user
INFO  12:12:49 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  12:12:49 Calling the Calculate Networth Api
INFO  12:12:49 Calling the Networth api to return the networth of sent portfolio
INFO  12:12:49 Calling the StockPriceApi from:Index of portfolio management controller
INFO  12:12:49 Calling the StockPriceApi from:Index of portfolio management controller
INFO  12:12:49 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  12:12:49 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  12:13:01 Selling the stocks of user with id = 789
INFO  12:13:01 sale of stock of user with id789done
INFO  12:13:03  User with Id = 789 is a valid user
INFO  12:13:03 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  12:13:03 Calling the Calculate Networth Api
INFO  12:13:03 Calling the Networth api to return the networth of sent portfolio
INFO  12:13:03 Calling the StockPriceApi from:Index of portfolio management controller
INFO  12:13:03 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  12:13:03 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  12:13:12 Selling the stocks of user with id = 789
INFO  12:13:12 sale of stock of user with id789done
INFO  12:13:13  User with Id = 789 is a valid user
INFO  12:13:13 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  12:13:13 Calling the Calculate Networth Api
INFO  12:13:13 Calling the Networth api to return the networth of sent portfolio
INFO  12:13:13 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  12:13:13 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  12:13:22 sale of  mutual fund of user with id789done
INFO  12:13:25  User with Id = 789 is a valid user
INFO  12:13:25 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  12:13:25 Calling the Calculate Networth Api
INFO  12:13:25 Calling the Networth api to return the networth of sent portfolio
INFO  12:13:25 Calling the MutualFundPriceApi from:Index of portfolio management controller
INFO  12:13:30 sale of  mutual fund of user with id789done
INFO  12:13:32  User with Id = 789 is a valid user
INFO  12:13:32 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  12:13:32 Calling the Calculate Networth Api
INFO  12:13:32 Calling the Networth api to return the networth of sent portfolio
INFO  05:51:19 Application started. Press Ctrl+C to shut down.
INFO  05:51:19 Hosting environment: Development
INFO  05:51:19 Content root path: D:\Portfolio mfpe\CustomerPortal
INFO  05:51:35  User with Id = 789 is a valid user
INFO  05:51:35 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  05:51:35 Calling the Calculate Networth Api for id789
INFO  05:51:36 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  05:51:36 Calling the StockPriceApi from:Index for fetching the details of stockBTC
INFO  05:51:36 Calling the StockPriceApi from:Index for fetching the details of stockLTC
INFO  05:51:36 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  05:51:36 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  05:51:57  User with Id = 789 is a valid user
INFO  05:51:57 Selling the stocks of user with id = 789
INFO  05:51:57 sale of stock of user with id789done
INFO  05:51:57 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":789,"NetWorth":86371.4,"status":false}
INFO  05:52:04  User with Id = 789 is a valid user
INFO  05:52:04 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  05:52:04 Calling the Calculate Networth Api for id789
INFO  05:52:04 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  05:52:04 Calling the StockPriceApi from:Index for fetching the details of stockBTC
INFO  05:52:04 Calling the StockPriceApi from:Index for fetching the details of stockLTC
INFO  05:52:04 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  05:52:04 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  05:52:23  User with Id = 789 is a valid user
INFO  05:52:23 Selling the stocks of user with id = 789
INFO  05:52:23 sale of stock of user with id789done
INFO  05:52:23 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":789,"NetWorth":62383.399999999994,"status":true}
INFO  05:52:25  User with Id = 789 is a valid user
INFO  05:52:25 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  05:52:26 Calling the Calculate Networth Api for id789
INFO  05:52:26 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  05:52:26 Calling the StockPriceApi from:Index for fetching the details of stockLTC
INFO  05:52:26 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  05:52:26 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  05:52:34  User with Id = 789 is a valid user
INFO  05:52:34 Selling the stocks of user with id = 789
INFO  05:52:34 sale of stock of user with id789done
INFO  05:52:34 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":789,"NetWorth":61297.8,"status":true}
INFO  05:52:36  User with Id = 789 is a valid user
INFO  05:52:36 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  05:52:36 Calling the Calculate Networth Api for id789
INFO  05:52:36 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  05:52:36 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  05:52:36 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  05:52:43  User with Id = 789 is a valid user
INFO  05:52:43 Selling mutual fundUDAAN of user with id:789
INFO  05:52:43 sale of  mutual fund of user with id789done
INFO  05:52:43 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":789,"NetWorth":56679.240000000005,"status":true}
INFO  05:52:46  User with Id = 789 is a valid user
INFO  05:52:46 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  05:52:46 Calling the Calculate Networth Api for id789
INFO  05:52:46 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  05:52:46 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  05:52:55  User with Id = 789 is a valid user
INFO  05:52:55 Selling mutual fundVIVA of user with id:789
INFO  05:52:56 sale of  mutual fund of user with id789done
INFO  05:52:56 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":789,"NetWorth":0.0,"status":true}
INFO  05:52:58  User with Id = 789 is a valid user
INFO  05:52:58 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  05:52:58 Calling the Calculate Networth Api for id789
INFO  05:52:58 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  05:53:11  User with Id = 789 is logging out
INFO  05:53:20  User with Id = 12345 is a valid user
INFO  05:53:20 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  05:53:20 Calling the Calculate Networth Api for id12345
INFO  05:53:20 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  05:53:20 Calling the StockPriceApi from:Index for fetching the details of stockBTC
INFO  05:53:20 Calling the StockPriceApi from:Index for fetching the details of stockETH
INFO  05:53:20 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  05:53:20 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  06:42:33 Application started. Press Ctrl+C to shut down.
INFO  06:42:33 Hosting environment: Development
INFO  06:42:33 Content root path: D:\Portfolio mfpe\CustomerPortal
INFO  06:42:50  User with Id = 12345 is a valid user
INFO  06:42:50 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  06:42:50 Calling the Calculate Networth Api for id12345
INFO  06:42:50 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  06:42:50 Calling the StockPriceApi from:Index for fetching the details of stockBTC
INFO  06:42:50 Calling the StockPriceApi from:Index for fetching the details of stockETH
INFO  06:42:50 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  06:42:50 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  06:42:56  User with Id = 12345 is a valid user
INFO  06:42:56 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  06:42:56 Calling the Calculate Networth Api for id12345
INFO  06:42:56 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  06:42:56 Calling the StockPriceApi from:Index for fetching the details of stockBTC
INFO  06:42:56 Calling the StockPriceApi from:Index for fetching the details of stockETH
INFO  06:42:56 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  06:42:56 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  06:43:03  User with Id = 12345 is a valid user
INFO  06:43:03 Selling the stocks of user with id = 12345
INFO  06:43:03 sale of stock of user with id12345done
INFO  06:43:03 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":12345,"NetWorth":39399.6,"status":true}
INFO  06:43:05  User with Id = 12345 is a valid user
INFO  06:43:05 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  06:43:05 Calling the Calculate Networth Api for id12345
INFO  06:43:05 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  06:43:05 Calling the StockPriceApi from:Index for fetching the details of stockETH
INFO  06:43:05 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  06:43:05 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  06:43:14  User with Id = 12345 is a valid user
INFO  06:43:14 Selling the stocks of user with id = 12345
INFO  06:43:14 sale of stock of user with id12345done
INFO  06:43:14 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":12345,"NetWorth":12586.199999999997,"status":true}
INFO  06:43:15  User with Id = 12345 is a valid user
INFO  06:43:15 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  06:43:15 Calling the Calculate Networth Api for id12345
INFO  06:43:15 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  06:43:15 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  06:43:15 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  06:43:27  User with Id = 12345 is a valid user
INFO  06:43:27 Selling mutual fundVIVA of user with id:12345
INFO  06:43:27 Selling mutual fundVIVA of user with id:12345
INFO  06:43:27 sale of  mutual fund of user with id12345done
INFO  06:43:27 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":12345,"NetWorth":12586.2,"status":false}
INFO  06:43:29  User with Id = 12345 is a valid user
INFO  06:43:29 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  06:43:29 Calling the Calculate Networth Api for id12345
INFO  06:43:29 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  06:43:29 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  06:43:29 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  06:43:37  User with Id = 12345 is a valid user
INFO  06:43:37 Selling mutual fundUDAAN of user with id:12345
INFO  06:43:37 Selling mutual fundUDAAN of user with id:12345
INFO  06:43:37 sale of  mutual fund of user with id12345done
INFO  06:43:37 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":12345,"NetWorth":12586.2,"status":false}
INFO  06:43:39  User with Id = 12345 is a valid user
INFO  06:43:39 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  06:43:39 Calling the Calculate Networth Api for id12345
INFO  06:43:39 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  06:43:39 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  06:43:39 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  06:43:47  User with Id = 12345 is a valid user
INFO  06:43:47 Selling mutual fundVIVA of user with id:12345
INFO  06:43:47 Selling mutual fundVIVA of user with id:12345
INFO  06:43:47 sale of  mutual fund of user with id12345done
INFO  06:43:47 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":12345,"NetWorth":5976.960000000001,"status":true}
INFO  06:43:49  User with Id = 12345 is a valid user
INFO  06:43:49 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  06:43:49 Calling the Calculate Networth Api for id12345
INFO  06:43:49 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  06:43:49 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  06:43:55  User with Id = 12345 is a valid user
INFO  06:43:55 Selling mutual fundUDAAN of user with id:12345
INFO  06:43:55 Selling mutual fundUDAAN of user with id:12345
INFO  06:43:55 sale of  mutual fund of user with id12345done
INFO  06:43:55 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":12345,"NetWorth":0.0,"status":true}
INFO  06:43:59  User with Id = 12345 is a valid user
INFO  06:43:59 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  06:43:59 Calling the Calculate Networth Api for id12345
INFO  06:43:59 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  06:44:02  User with Id = 12345 is logging out
INFO  06:54:58 Application started. Press Ctrl+C to shut down.
INFO  06:54:58 Hosting environment: Development
INFO  06:54:58 Content root path: D:\Portfolio mfpe\CustomerPortal
INFO  06:55:09  User with Id = 789 is a valid user
INFO  06:55:09 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  06:55:09 Calling the Calculate Networth Api for id789
INFO  06:55:09 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  06:55:24  User with Id = 12345 is a valid user
INFO  06:55:24 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  06:55:24 Calling the Calculate Networth Api for id12345
INFO  06:55:24 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  06:55:59  User with Id = 789 is a valid user
INFO  06:55:59 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  06:55:59 Calling the Calculate Networth Api for id789
INFO  06:56:00 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  06:56:00 Calling the StockPriceApi from:Index for fetching the details of stockBTC
INFO  06:56:00 Calling the StockPriceApi from:Index for fetching the details of stockLTC
INFO  06:56:00 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  06:56:00 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  06:56:07  User with Id = 789 is a valid user
INFO  06:56:07 Selling the stocks of user with id = 789
INFO  06:56:07 sale of stock of user with id789done
INFO  06:56:07 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":789,"NetWorth":85285.79999999999,"status":true}
INFO  06:56:09  User with Id = 789 is a valid user
INFO  06:56:09 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  06:56:09 Calling the Calculate Networth Api for id789
INFO  06:56:09 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  06:56:09 Calling the StockPriceApi from:Index for fetching the details of stockBTC
INFO  06:56:09 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  06:56:09 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  06:56:17  User with Id = 789 is a valid user
INFO  06:56:17 Selling mutual fundUDAAN of user with id:789
INFO  06:56:17 Selling mutual fundUDAAN of user with id:789
INFO  06:56:17 sale of  mutual fund of user with id789done
INFO  06:56:17 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":789,"NetWorth":80667.24,"status":true}
INFO  06:56:19  User with Id = 789 is a valid user
INFO  06:56:19 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  06:56:19 Calling the Calculate Networth Api for id789
INFO  06:56:19 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  06:56:19 Calling the StockPriceApi from:Index for fetching the details of stockBTC
INFO  06:56:19 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  06:56:29  User with Id = 789 is a valid user
INFO  06:56:29 Selling mutual fundVIVA of user with id:789
INFO  06:56:29 Selling mutual fundVIVA of user with id:789
INFO  06:56:29 sale of  mutual fund of user with id789done
INFO  06:56:29 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":789,"NetWorth":23988.000000000007,"status":true}
INFO  06:56:32  User with Id = 789 is a valid user
INFO  06:56:32 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  06:56:32 Calling the Calculate Networth Api for id789
INFO  06:56:32 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  06:56:32 Calling the StockPriceApi from:Index for fetching the details of stockBTC
INFO  06:56:47  User with Id = 789 is a valid user
INFO  06:56:47 Selling the stocks of user with id = 789
INFO  06:56:47 sale of stock of user with id789done
INFO  06:56:47 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":789,"NetWorth":21689.15,"status":true}
INFO  06:56:49  User with Id = 789 is a valid user
INFO  06:56:49 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  06:56:49 Calling the Calculate Networth Api for id789
INFO  06:56:49 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  06:56:49 Calling the StockPriceApi from:Index for fetching the details of stockBTC
INFO  06:57:12  User with Id = 789 is logging out
INFO  06:59:27 Application started. Press Ctrl+C to shut down.
INFO  06:59:27 Hosting environment: Development
INFO  06:59:27 Content root path: D:\Portfolio mfpe\CustomerPortal
INFO  06:59:39  User with Id = 789 is a valid user
INFO  06:59:39 Showing the user with portfolio ID = 789his networth and the assets he is currently holding
INFO  06:59:39 Calling the Calculate Networth Api for id789
INFO  06:59:39 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  06:59:39 Calling the StockPriceApi from:Index for fetching the details of stockBTC
INFO  06:59:44  User with Id = 789 is logging out
INFO  06:59:52  User with Id = 12345 is a valid user
INFO  06:59:52 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  06:59:52 Calling the Calculate Networth Api for id12345
INFO  06:59:52 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  06:59:52 Calling the StockPriceApi from:Index for fetching the details of stockBTC
INFO  06:59:52 Calling the StockPriceApi from:Index for fetching the details of stockETH
INFO  06:59:52 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  06:59:52 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  07:00:01  User with Id = 12345 is a valid user
INFO  07:00:01 Selling the stocks of user with id = 12345
INFO  07:00:01 sale of stock of user with id12345done
INFO  07:00:01 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":12345,"NetWorth":14485.25,"status":true}
INFO  07:00:03  User with Id = 12345 is a valid user
INFO  07:00:03 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  07:00:03 Calling the Calculate Networth Api for id12345
INFO  07:00:03 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  07:00:03 Calling the StockPriceApi from:Index for fetching the details of stockBTC
INFO  07:00:03 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  07:00:03 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  07:00:13  User with Id = 12345 is a valid user
INFO  07:00:13 Selling mutual fundVIVA of user with id:12345
INFO  07:00:13 Selling mutual fundVIVA of user with id:12345
INFO  07:00:13 sale of  mutual fund of user with id12345done
INFO  07:00:13 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":12345,"NetWorth":7876.01,"status":true}
INFO  07:00:16  User with Id = 12345 is a valid user
INFO  07:00:16 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  07:00:16 Calling the Calculate Networth Api for id12345
INFO  07:00:16 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  07:00:16 Calling the StockPriceApi from:Index for fetching the details of stockBTC
INFO  07:00:16 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  07:00:59  User with Id = 12345 is logging out
INFO  07:07:50 Application started. Press Ctrl+C to shut down.
INFO  07:07:50 Hosting environment: Development
INFO  07:07:50 Content root path: D:\Portfolio mfpe\CustomerPortal
INFO  07:07:59  User with Id = 12345 is a valid user
INFO  07:07:59 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  07:07:59 Calling the Calculate Networth Api for id12345
INFO  07:07:59 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  07:07:59 Calling the StockPriceApi from:Index for fetching the details of stockBTC
INFO  07:07:59 Calling the StockPriceApi from:Index for fetching the details of stockETH
INFO  07:07:59 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  07:07:59 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  07:08:07  User with Id = 12345 is a valid user
INFO  07:08:07 Selling the stocks of user with id = 12345
INFO  07:08:07 sale of stock of user with id12345done
INFO  07:08:07 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":12345,"NetWorth":41198.700000000004,"status":true}
INFO  07:08:10  User with Id = 12345 is a valid user
INFO  07:08:10 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  07:08:10 Calling the Calculate Networth Api for id12345
INFO  07:08:10 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  07:08:10 Calling the StockPriceApi from:Index for fetching the details of stockBTC
INFO  07:08:10 Calling the StockPriceApi from:Index for fetching the details of stockETH
INFO  07:08:10 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  07:08:10 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  07:08:18  User with Id = 12345 is a valid user
INFO  07:08:18 Selling the stocks of user with id = 12345
INFO  07:08:18 sale of stock of user with id12345done
INFO  07:08:18 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":12345,"NetWorth":40998.799999999996,"status":true}
INFO  07:08:20  User with Id = 12345 is a valid user
INFO  07:08:20 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  07:08:20 Calling the Calculate Networth Api for id12345
INFO  07:08:20 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  07:08:20 Calling the StockPriceApi from:Index for fetching the details of stockBTC
INFO  07:08:20 Calling the StockPriceApi from:Index for fetching the details of stockETH
INFO  07:08:20 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  07:08:20 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  07:08:31  User with Id = 12345 is a valid user
INFO  07:08:31 Selling mutual fundVIVA of user with id:12345
INFO  07:08:31 Selling mutual fundVIVA of user with id:12345
INFO  07:08:31 sale of  mutual fund of user with id12345done
INFO  07:08:31 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":12345,"NetWorth":37594.04,"status":true}
INFO  07:08:34  User with Id = 12345 is a valid user
INFO  07:08:34 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  07:08:34 Calling the Calculate Networth Api for id12345
INFO  07:08:34 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  07:08:34 Calling the StockPriceApi from:Index for fetching the details of stockBTC
INFO  07:08:34 Calling the StockPriceApi from:Index for fetching the details of stockETH
INFO  07:08:34 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  07:08:34 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  07:08:46  User with Id = 12345 is a valid user
INFO  07:08:46 Selling the stocks of user with id = 12345
INFO  07:08:46 sale of stock of user with id12345done
INFO  07:08:46 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":12345,"NetWorth":35994.840000000004,"status":true}
INFO  07:08:48  User with Id = 12345 is a valid user
INFO  07:08:48 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  07:08:48 Calling the Calculate Networth Api for id12345
INFO  07:08:48 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  07:08:48 Calling the StockPriceApi from:Index for fetching the details of stockETH
INFO  07:08:48 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  07:08:48 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  07:08:57  User with Id = 12345 is a valid user
INFO  07:08:57 Selling the stocks of user with id = 12345
INFO  07:08:57 sale of stock of user with id12345done
INFO  07:08:57 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":12345,"NetWorth":9181.439999999995,"status":true}
INFO  07:08:59  User with Id = 12345 is a valid user
INFO  07:08:59 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  07:08:59 Calling the Calculate Networth Api for id12345
INFO  07:08:59 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  07:08:59 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  07:09:00 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  07:47:49 Application started. Press Ctrl+C to shut down.
INFO  07:47:49 Hosting environment: Development
INFO  07:47:49 Content root path: D:\Portfolio mfpe\CustomerPortal
INFO  07:47:56  User with Id = 12345 is a valid user
INFO  07:47:56 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  07:47:56 Calling the Calculate Networth Api for id12345
INFO  07:47:56 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  07:47:56  The networth is {"networth":41298.65}
INFO  07:47:56 Calling the StockPriceApi from:Index for fetching the details of stockBTC
INFO  07:47:56 the stock details are {"StockId":101,"StockName":"BTC","StockValue":99.95}
INFO  07:47:56 Calling the StockPriceApi from:Index for fetching the details of stockETH
INFO  07:47:56 the stock details are {"StockId":102,"StockName":"ETH","StockValue":40.2}
INFO  07:47:56 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  07:47:56 The mutual fund details are {"MutualFundId":1,"MutualFundName":"UDAAN","MutualFundValue":135.84}
INFO  07:47:56 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  07:47:56 The mutual fund details are {"MutualFundId":2,"MutualFundName":"VIVA","MutualFundValue":100.14}
INFO  07:48:02  User with Id = 12345 is a valid user
INFO  07:48:02 Selling the stocks of user with id = 12345
INFO  07:48:02 Selling Stock ETH of user  with id = 12345
INFO  07:48:02 Fetching his portFolio
INFO  07:48:02 The portfolio {"PortFolioId":12345,"StockList":[{"StockName":"BTC","StockCount":19},{"StockName":"ETH","StockCount":667}],"MutualFundList":[{"MutualFundName":"UDAAN","MutualFundUnits":44},{"MutualFundName":"VIVA","MutualFundUnits":66}]}
INFO  07:48:02 Fetching the response of sale of stock ETH of user with id 12345
INFO  07:48:02 The response is {"SaleStatus":true,"Networth":39931.85}
INFO  07:48:02 sale of stock of user with id12345done
INFO  07:48:02 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":12345,"NetWorth":39931.85,"status":true}
INFO  07:48:05  User with Id = 12345 is a valid user
INFO  07:48:05 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  07:48:05 Calling the Calculate Networth Api for id12345
INFO  07:48:05 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  07:48:05  The networth is {"networth":39931.85}
INFO  07:48:05 Calling the StockPriceApi from:Index for fetching the details of stockBTC
INFO  07:48:05 the stock details are {"StockId":101,"StockName":"BTC","StockValue":99.95}
INFO  07:48:05 Calling the StockPriceApi from:Index for fetching the details of stockETH
INFO  07:48:05 the stock details are {"StockId":102,"StockName":"ETH","StockValue":40.2}
INFO  07:48:05 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  07:48:05 The mutual fund details are {"MutualFundId":1,"MutualFundName":"UDAAN","MutualFundValue":135.84}
INFO  07:48:05 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  07:48:05 The mutual fund details are {"MutualFundId":2,"MutualFundName":"VIVA","MutualFundValue":100.14}
INFO  07:48:12  User with Id = 12345 is a valid user
INFO  07:48:12 Selling the stocks of user with id = 12345
INFO  07:48:12 Selling Stock BTC of user  with id = 12345
INFO  07:48:12 Fetching his portFolio
INFO  07:48:12 The portfolio {"PortFolioId":12345,"StockList":[{"StockName":"BTC","StockCount":19},{"StockName":"ETH","StockCount":633}],"MutualFundList":[{"MutualFundName":"UDAAN","MutualFundUnits":44},{"MutualFundName":"VIVA","MutualFundUnits":66}]}
INFO  07:48:12 Fetching the response of sale of stock BTC of user with id 12345
INFO  07:48:12 The response is {"SaleStatus":true,"Networth":38032.799999999996}
INFO  07:48:12 sale of stock of user with id12345done
INFO  07:48:12 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":12345,"NetWorth":38032.799999999996,"status":true}
INFO  07:48:13  User with Id = 12345 is a valid user
INFO  07:48:13 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  07:48:13 Calling the Calculate Networth Api for id12345
INFO  07:48:13 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  07:48:13  The networth is {"networth":38032.8}
INFO  07:48:13 Calling the StockPriceApi from:Index for fetching the details of stockETH
INFO  07:48:13 the stock details are {"StockId":102,"StockName":"ETH","StockValue":40.2}
INFO  07:48:13 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  07:48:13 The mutual fund details are {"MutualFundId":1,"MutualFundName":"UDAAN","MutualFundValue":135.84}
INFO  07:48:13 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  07:48:13 The mutual fund details are {"MutualFundId":2,"MutualFundName":"VIVA","MutualFundValue":100.14}
INFO  07:48:19  User with Id = 12345 is a valid user
INFO  07:48:19 Selling the stocks of user with id = 12345
INFO  07:48:19 Selling Stock ETH of user  with id = 12345
INFO  07:48:19 Fetching his portFolio
INFO  07:48:19 The portfolio {"PortFolioId":12345,"StockList":[{"StockName":"ETH","StockCount":633}],"MutualFundList":[{"MutualFundName":"UDAAN","MutualFundUnits":44},{"MutualFundName":"VIVA","MutualFundUnits":66}]}
INFO  07:48:19 Fetching the response of sale of stock ETH of user with id 12345
INFO  07:48:19 The response is {"SaleStatus":true,"Networth":12586.200000000004}
INFO  07:48:19 sale of stock of user with id12345done
INFO  07:48:19 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":12345,"NetWorth":12586.200000000004,"status":true}
INFO  07:48:21  User with Id = 12345 is a valid user
INFO  07:48:21 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  07:48:21 Calling the Calculate Networth Api for id12345
INFO  07:48:21 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  07:48:21  The networth is {"networth":12586.2}
INFO  07:48:21 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  07:48:21 The mutual fund details are {"MutualFundId":1,"MutualFundName":"UDAAN","MutualFundValue":135.84}
INFO  07:48:21 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  07:48:21 The mutual fund details are {"MutualFundId":2,"MutualFundName":"VIVA","MutualFundValue":100.14}
INFO  07:48:27  User with Id = 12345 is a valid user
INFO  07:48:27 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  07:48:27 Calling the Calculate Networth Api for id12345
INFO  07:48:27 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  07:48:27  The networth is {"networth":12586.2}
INFO  07:48:27 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  07:48:27 The mutual fund details are {"MutualFundId":1,"MutualFundName":"UDAAN","MutualFundValue":135.84}
INFO  07:48:27 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  07:48:27 The mutual fund details are {"MutualFundId":2,"MutualFundName":"VIVA","MutualFundValue":100.14}
INFO  07:48:33  User with Id = 12345 is a valid user
INFO  07:48:33 Selling mutual fundUDAAN of user with id:12345
INFO  07:48:33 Selling mutual fundUDAAN of user with id:12345
INFO  07:48:33 Fetching the portFolio of user with portFolio ID = 12345 from sellMutualFunds
INFO  07:48:33 Fetching response of the sale of mutual fund done by the user 12345
INFO  07:48:33 The response is {"SaleStatus":true,"Networth":6609.240000000001}
INFO  07:48:33 sale of  mutual fund of user with id12345done
INFO  07:48:33 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":12345,"NetWorth":6609.240000000001,"status":true}
INFO  07:48:35  User with Id = 12345 is a valid user
INFO  07:48:35 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  07:48:35 Calling the Calculate Networth Api for id12345
INFO  07:48:35 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  07:48:35  The networth is {"networth":6609.24}
INFO  07:48:35 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  07:48:35 The mutual fund details are {"MutualFundId":2,"MutualFundName":"VIVA","MutualFundValue":100.14}
INFO  07:48:43  User with Id = 12345 is a valid user
INFO  07:48:43 Selling mutual fundVIVA of user with id:12345
INFO  07:48:43 Selling mutual fundVIVA of user with id:12345
INFO  07:48:43 Fetching the portFolio of user with portFolio ID = 12345 from sellMutualFunds
INFO  07:48:43 Fetching response of the sale of mutual fund done by the user 12345
INFO  07:48:43 The response is {"SaleStatus":true,"Networth":0.0}
INFO  07:48:43 sale of  mutual fund of user with id12345done
INFO  07:48:43 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":12345,"NetWorth":0.0,"status":true}
INFO  07:48:45  User with Id = 12345 is a valid user
INFO  07:48:45 Showing the user with portfolio ID = 12345his networth and the assets he is currently holding
INFO  07:48:45 Calling the Calculate Networth Api for id12345
INFO  07:48:45 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  07:48:45  The networth is {"networth":0.0}
INFO  07:48:54  User with Id = 12345 is logging out
INFO  07:52:23  User with Id = 1729 is a valid user
INFO  07:52:23 Showing the user with portfolio ID = 1729his networth and the assets he is currently holding
INFO  07:52:23 Calling the Calculate Networth Api for id1729
INFO  07:52:24 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  07:52:24  The networth is {"networth":5287.2}
INFO  07:52:24 Calling the StockPriceApi from:Index for fetching the details of stockLTC
INFO  07:52:24 the stock details are {"StockId":103,"StockName":"LTC","StockValue":23.6}
INFO  07:52:24 Calling the StockPriceApi from:Index for fetching the details of stockETH
INFO  07:52:24 the stock details are {"StockId":102,"StockName":"ETH","StockValue":40.2}
INFO  07:52:24 Calling the StockPriceApi from:Index for fetching the details of stockBTC
INFO  07:52:24 the stock details are {"StockId":101,"StockName":"BTC","StockValue":99.95}
INFO  07:52:24 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:CRED
INFO  07:52:24 The mutual fund details are {"MutualFundId":2,"MutualFundName":"CRED","MutualFundValue":104.14}
INFO  07:52:24 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  07:52:24 The mutual fund details are {"MutualFundId":1,"MutualFundName":"UDAAN","MutualFundValue":135.84}
INFO  07:52:24 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  07:52:24 The mutual fund details are {"MutualFundId":2,"MutualFundName":"VIVA","MutualFundValue":100.14}
INFO  07:52:35  User with Id = 1729 is a valid user
INFO  07:52:35 Selling the stocks of user with id = 1729
INFO  07:52:35 Selling Stock LTC of user  with id = 1729
INFO  07:52:35 Fetching his portFolio
INFO  07:52:35 The portfolio {"PortFolioId":1729,"StockList":[{"StockName":"LTC","StockCount":20},{"StockName":"ETH","StockCount":34},{"StockName":"BTC","StockCount":12}],"MutualFundList":[{"MutualFundName":"CRED","MutualFundUnits":8},{"MutualFundName":"UDAAN","MutualFundUnits":6},{"MutualFundName":"VIVA","MutualFundUnits":6}]}
INFO  07:52:35 Fetching the response of sale of stock LTC of user with id 1729
INFO  07:52:35 The response is {"SaleStatus":true,"Networth":4815.2}
INFO  07:52:35 sale of stock of user with id1729done
INFO  07:52:35 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":1729,"NetWorth":4815.2,"status":true}
INFO  07:52:37  User with Id = 1729 is a valid user
INFO  07:52:37 Showing the user with portfolio ID = 1729his networth and the assets he is currently holding
INFO  07:52:37 Calling the Calculate Networth Api for id1729
INFO  07:52:37 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  07:52:37  The networth is {"networth":4815.2}
INFO  07:52:37 Calling the StockPriceApi from:Index for fetching the details of stockETH
INFO  07:52:37 the stock details are {"StockId":102,"StockName":"ETH","StockValue":40.2}
INFO  07:52:37 Calling the StockPriceApi from:Index for fetching the details of stockBTC
INFO  07:52:37 the stock details are {"StockId":101,"StockName":"BTC","StockValue":99.95}
INFO  07:52:37 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:CRED
INFO  07:52:37 The mutual fund details are {"MutualFundId":2,"MutualFundName":"CRED","MutualFundValue":104.14}
INFO  07:52:37 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  07:52:37 The mutual fund details are {"MutualFundId":1,"MutualFundName":"UDAAN","MutualFundValue":135.84}
INFO  07:52:37 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  07:52:37 The mutual fund details are {"MutualFundId":2,"MutualFundName":"VIVA","MutualFundValue":100.14}
INFO  07:52:42  User with Id = 1729 is a valid user
INFO  07:52:42 Selling the stocks of user with id = 1729
INFO  07:52:42 Selling Stock ETH of user  with id = 1729
INFO  07:52:42 Fetching his portFolio
INFO  07:52:42 The portfolio {"PortFolioId":1729,"StockList":[{"StockName":"ETH","StockCount":34},{"StockName":"BTC","StockCount":12}],"MutualFundList":[{"MutualFundName":"CRED","MutualFundUnits":8},{"MutualFundName":"UDAAN","MutualFundUnits":6},{"MutualFundName":"VIVA","MutualFundUnits":6}]}
INFO  07:52:42 Fetching the response of sale of stock ETH of user with id 1729
INFO  07:52:42 The response is {"SaleStatus":true,"Networth":3448.3999999999996}
INFO  07:52:42 sale of stock of user with id1729done
INFO  07:52:42 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":1729,"NetWorth":3448.3999999999996,"status":true}
INFO  07:52:44  User with Id = 1729 is a valid user
INFO  07:52:44 Showing the user with portfolio ID = 1729his networth and the assets he is currently holding
INFO  07:52:44 Calling the Calculate Networth Api for id1729
INFO  07:52:44 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  07:52:44  The networth is {"networth":3448.4}
INFO  07:52:44 Calling the StockPriceApi from:Index for fetching the details of stockBTC
INFO  07:52:44 the stock details are {"StockId":101,"StockName":"BTC","StockValue":99.95}
INFO  07:52:44 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:CRED
INFO  07:52:44 The mutual fund details are {"MutualFundId":2,"MutualFundName":"CRED","MutualFundValue":104.14}
INFO  07:52:44 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  07:52:44 The mutual fund details are {"MutualFundId":1,"MutualFundName":"UDAAN","MutualFundValue":135.84}
INFO  07:52:44 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  07:52:44 The mutual fund details are {"MutualFundId":2,"MutualFundName":"VIVA","MutualFundValue":100.14}
INFO  07:52:50  User with Id = 1729 is a valid user
INFO  07:52:50 Selling the stocks of user with id = 1729
INFO  07:52:50 Selling Stock BTC of user  with id = 1729
INFO  07:52:50 Fetching his portFolio
INFO  07:52:50 The portfolio {"PortFolioId":1729,"StockList":[{"StockName":"BTC","StockCount":12}],"MutualFundList":[{"MutualFundName":"CRED","MutualFundUnits":8},{"MutualFundName":"UDAAN","MutualFundUnits":6},{"MutualFundName":"VIVA","MutualFundUnits":6}]}
INFO  07:52:50 Fetching the response of sale of stock BTC of user with id 1729
INFO  07:52:50 The response is {"SaleStatus":true,"Networth":2249.0}
INFO  07:52:50 sale of stock of user with id1729done
INFO  07:52:50 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":1729,"NetWorth":2249.0,"status":true}
INFO  07:52:52  User with Id = 1729 is a valid user
INFO  07:52:52 Showing the user with portfolio ID = 1729his networth and the assets he is currently holding
INFO  07:52:52 Calling the Calculate Networth Api for id1729
INFO  07:52:52 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  07:52:52  The networth is {"networth":2249.0}
INFO  07:52:52 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:CRED
INFO  07:52:52 The mutual fund details are {"MutualFundId":2,"MutualFundName":"CRED","MutualFundValue":104.14}
INFO  07:52:52 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  07:52:52 The mutual fund details are {"MutualFundId":1,"MutualFundName":"UDAAN","MutualFundValue":135.84}
INFO  07:52:52 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  07:52:52 The mutual fund details are {"MutualFundId":2,"MutualFundName":"VIVA","MutualFundValue":100.14}
INFO  07:52:56  User with Id = 1729 is a valid user
INFO  07:52:56 Showing the user with portfolio ID = 1729his networth and the assets he is currently holding
INFO  07:52:56 Calling the Calculate Networth Api for id1729
INFO  07:52:56 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  07:52:56  The networth is {"networth":2249.0}
INFO  07:52:56 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:CRED
INFO  07:52:56 The mutual fund details are {"MutualFundId":2,"MutualFundName":"CRED","MutualFundValue":104.14}
INFO  07:52:56 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  07:52:56 The mutual fund details are {"MutualFundId":1,"MutualFundName":"UDAAN","MutualFundValue":135.84}
INFO  07:52:56 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  07:52:56 The mutual fund details are {"MutualFundId":2,"MutualFundName":"VIVA","MutualFundValue":100.14}
INFO  07:53:03  User with Id = 1729 is a valid user
INFO  07:53:03 Selling mutual fundCRED of user with id:1729
INFO  07:53:03 Selling mutual fundCRED of user with id:1729
INFO  07:53:03 Fetching the portFolio of user with portFolio ID = 1729 from sellMutualFunds
INFO  07:53:03 Fetching response of the sale of mutual fund done by the user 1729
INFO  07:53:03 The response is {"SaleStatus":true,"Networth":1415.88}
INFO  07:53:03 sale of  mutual fund of user with id1729done
INFO  07:53:03 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":1729,"NetWorth":1415.88,"status":true}
INFO  07:53:05  User with Id = 1729 is a valid user
INFO  07:53:05 Showing the user with portfolio ID = 1729his networth and the assets he is currently holding
INFO  07:53:05 Calling the Calculate Networth Api for id1729
INFO  07:53:05 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  07:53:05  The networth is {"networth":1415.88}
INFO  07:53:05 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  07:53:05 The mutual fund details are {"MutualFundId":1,"MutualFundName":"UDAAN","MutualFundValue":135.84}
INFO  07:53:05 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  07:53:05 The mutual fund details are {"MutualFundId":2,"MutualFundName":"VIVA","MutualFundValue":100.14}
INFO  07:53:11  User with Id = 1729 is a valid user
INFO  07:53:11 Showing the user with portfolio ID = 1729his networth and the assets he is currently holding
INFO  07:53:11 Calling the Calculate Networth Api for id1729
INFO  07:53:11 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  07:53:11  The networth is {"networth":1415.88}
INFO  07:53:11 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:UDAAN
INFO  07:53:11 The mutual fund details are {"MutualFundId":1,"MutualFundName":"UDAAN","MutualFundValue":135.84}
INFO  07:53:11 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  07:53:11 The mutual fund details are {"MutualFundId":2,"MutualFundName":"VIVA","MutualFundValue":100.14}
INFO  07:53:16  User with Id = 1729 is a valid user
INFO  07:53:16 Selling mutual fundUDAAN of user with id:1729
INFO  07:53:16 Selling mutual fundUDAAN of user with id:1729
INFO  07:53:16 Fetching the portFolio of user with portFolio ID = 1729 from sellMutualFunds
INFO  07:53:16 Fetching response of the sale of mutual fund done by the user 1729
INFO  07:53:16 The response is {"SaleStatus":true,"Networth":600.8400000000001}
INFO  07:53:16 sale of  mutual fund of user with id1729done
INFO  07:53:16 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":1729,"NetWorth":600.8400000000001,"status":true}
INFO  07:53:19  User with Id = 1729 is a valid user
INFO  07:53:19 Showing the user with portfolio ID = 1729his networth and the assets he is currently holding
INFO  07:53:19 Calling the Calculate Networth Api for id1729
INFO  07:53:19 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  07:53:19  The networth is {"networth":600.84}
INFO  07:53:19 Calling the MutualFundPriceApi from:Index for fetching the details of the mutual fund:VIVA
INFO  07:53:19 The mutual fund details are {"MutualFundId":2,"MutualFundName":"VIVA","MutualFundValue":100.14}
INFO  07:53:24  User with Id = 1729 is a valid user
INFO  07:53:24 Selling mutual fundVIVA of user with id:1729
INFO  07:53:24 Selling mutual fundVIVA of user with id:1729
INFO  07:53:24 Fetching the portFolio of user with portFolio ID = 1729 from sellMutualFunds
INFO  07:53:24 Fetching response of the sale of mutual fund done by the user 1729
INFO  07:53:24 The response is {"SaleStatus":true,"Networth":0.0}
INFO  07:53:24 sale of  mutual fund of user with id1729done
INFO  07:53:24 Entering the data in the database. The data is {"SaleId":0,"PortFolioID":1729,"NetWorth":0.0,"status":true}
INFO  07:53:26  User with Id = 1729 is a valid user
INFO  07:53:26 Showing the user with portfolio ID = 1729his networth and the assets he is currently holding
INFO  07:53:26 Calling the Calculate Networth Api for id1729
INFO  07:53:26 Calling the Networth api to return the networth of sent portfolio: System.Net.Http.StringContent
INFO  07:53:26  The networth is {"networth":0.0}
INFO  07:53:30  User with Id = 1729 is logging out
